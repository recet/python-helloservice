version: 2
jobs:
  build:
    working_directory: ~/tmp
    docker:
      - image: python:3
    #working_directory: /go/src/github.com/CircleCI-Public/circleci-demo-docker
    steps:
      - checkout
      # ... steps for building/testing app ...
      - run: 
          name: Test requirements.
          command: pip install --no-cache-dir -r requirements.txt

      - setup_remote_docker:   
          docker_layer_caching: true 

      # use a primary image that already has Docker (recommended)
      # or install it during a build like we do here
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      # build and push Docker image
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t   recet/python-helloservice:$TAG .      # (4)
          docker login -u $DOCKER_USER -p $DOCKER_PASS         # (5)
          docker push recet/python-helloservice:$TAG

      # Start deployment process.
      # Install gcp tools 
      - run: 
          name: Download & install Google SDK
          command: curl https://dl.google.com/dl/cloudsdk/channels/rapid/install_google_cloud_sdk.bash -o gcloud_install.sh && sudo sh gcloud_install.sh --disable-prompts --install-dir="/bin"
      - run: 
          name: Installing kubectl using Google SDK
          command: sudo /bin/google-cloud-sdk/bin/gcloud --quiet components install kubectl
      - run: 
          name: Update PATH
          command: echo 'export PATH=/bin/google-cloud-sdk/bin:$PATH' >> $BASH_ENV
      - run: 
          name: Dump Google Cloud Credentials to file
          command: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json 
      - run:
          name: Authenticate with SA
          command: gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
      - run: 
          name: Activating gcloud configuration
          command: |
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      # Deploy to env.
      - run:
          name: Deploy new version of app
          command: kubectl patch deployment python-helloservice -p '{"spec":{"template":{"spec":{"containers":[{"name":"python-helloservice","image":"recet/python-helloservice:'"$TAG"'"}]}}}}'
